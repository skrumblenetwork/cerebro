{"version":3,"sources":["components/Layout.js","classes/Block.js","classes/Transaction.js","classes/App.js","classes/Util.js","App.js","serviceWorker.js","index.js"],"names":["app","Block","svg","points","offset","animationSpeed","Object","classCallCheck","this","group","append","attr","concat","label","text","img","d3","translateAlong","_this","keep","arguments","length","undefined","speed","ease","transition","easeBackIn","duration","on","setTimeout","remove","Transaction","div","width","height","x","y","r","value","rgba","transacton","d","select","Math","max","min","style","html","event","pageX","pageY","App","svgref","canvasref","shipsvgref","web3","Web3","config","web3API","data","nodes","links","margin","top","right","bottom","left","nodeRadius","maxTransactionsOnScreen","maxBlocksOnScreen","startPoints","blockOffset","transactions","blocks","tpsCounter","lastTpsCheck","Date","now","shipsvg","clientWidth","clientHeight","path","curve","beta","shipStartPath","RandomRange","random","atLength","l","getTotalLength","i","a","t","p1","getPointAtLength","p2","angle","atan2","PI","Layout","props","possibleConstructorReturn","getPrototypeOf","call","onTransactionsVisibleChange","e","setState","transactionsVisible","target","setMaxTransactions","onAnimationSpeedChange","state","tps","blockSpeed","currentBlock","minimumTransactionsVisible","maximumTransactionsVisible","blockStatus","createStartBlock","moveBlock","spawnTransaction","parseInt","newT","hash","transaction","element","id","this_var","tkeys","keys","onBlock","b","newB","blockDistance","number","push","block","g","blockTimes","timestamp","round","each","firstChild","parentNode","insertBefore","eth","getBlock","then","forEach","randomX","randomY","startTransition","refs","blockstatus","color","shift","easeBounceOut","canvas","adjustedWidth","adjustedHeight","subscribe","err","res","getTransaction","react_default","createElement","className","type","onChange","ref","src","alt","display","autoPlay","loop","Component","components_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.238cc2fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Block from '../classes/Block'\nimport Transaction from '../classes/Transaction'\nimport App from '../classes/App'\nimport {\n    translateAlong,\n    RandomRange,\n} from '../classes/Util'\n\nlet app;\n\nclass Layout extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        tps: 0,\n        blockSpeed: '---',\n        currentBlock: '---',\n        animationSpeed: 50,\n        transactionsVisible: 500,\n        minimumTransactionsVisible: 0,\n        maximumTransactionsVisible: 10000,\n        blockStatus: 'Preparing for take off'\n      };\n    }\n\n    onTransactionsVisibleChange = (e) => {\n      this.setState({ transactionsVisible: e.target.value });\n      app.setMaxTransactions(e.target.value)\n    }\n\n    onAnimationSpeedChange = (e) => {\n      this.setState({ animationSpeed: e.target.value });\n    }\n\n    async componentDidMount() {\n        app = new App(this.refs.shipsvg.clientWidth, this.refs.shipsvg.clientHeight, this.refs.svg, this.refs.canvas, this.refs.shipsvg)\n\n        const this_var = this\n        const d3 = app.d3\n        const maxBlocksOnScreen = app.config.maxBlocksOnScreen\n        const points = app.config.points;\n        const width = app.adjustedWidth\n        const height = app.adjustedHeight\n        const svg = app.svg\n        const shipsvg = app.shipsvg\n        let transactions = app.transactions\n        let blocks = app.blocks\n        let tpsCounter = app.tpsCounter\n        let lastTpsCheck = app.lastTpsCheck\n\n        this.refs.canvas.width = app.width;\n        this.refs.canvas.height = app.height;\n\n\n        app.web3.eth.subscribe('pendingTransactions', (err, res) => {\n          app.web3.eth.getTransaction(res).then((data) => {\n            spawnTransaction(data)\n          });\n        });\n\n        app.web3.eth.subscribe('newBlockHeaders', (err, res) => {\n          if(!err) {\n            moveBlock(res)\n          }\n        });\n\n        const blockTimes = []\n        let blockDistance = 0\n        let currentBlock\n\n        function createStartBlock() {\n          if(currentBlock && currentBlock.g) {\n            currentBlock.g.remove()\n          }\n\n          this_var.refs.blockstatus.style.color = \"rgba(255, 255, 255, 0)\"\n          this_var.refs.blockstatus.style.width = \"153px\"\n\n          setTimeout(() => {\n            this_var.setState({\n              blockStatus: 'Preparing for take off'\n            })\n            this_var.refs.blockstatus.style.color = \"rgba(255, 255, 255, 255)\"\n          }, 550)\n\n\n          currentBlock = new Block(shipsvg, app.config.startPoints, app.config.blockOffset)\n\n          currentBlock.startTransition(d3, translateAlong, app.config.startPoints, true, 2000, d3.easeBounceOut)\n        }\n\n        createStartBlock()\n\n        function moveBlock(b) {\n          let newB = new Block(shipsvg, points, app.config.blockOffset, this_var.state.animationSpeed)\n          blockDistance = 0\n\n          this_var.setState({\n            currentBlock: b.number\n          })\n\n          blocks.push({\n            block: b,\n            element: newB.g\n          })\n\n          blockTimes.push(b.timestamp)\n\n          if(blockTimes.length > 1) {\n            for(let i = 1; i < blockTimes.length - 1; i++) {\n              blockDistance += blockTimes[i] - blockTimes[i - 1]\n            }\n\n            this_var.setState({\n              blockSpeed: `${Math.round((blockDistance / blockTimes.length) * 100) / 100}s`\n            })\n          }\n\n          //send to back\n          newB.g.each(function() {\n            const firstChild = this.parentNode.firstChild;\n            if (firstChild) {\n                this.parentNode.insertBefore(this, firstChild);\n            }\n          })\n\n          app.web3.eth.getBlock(b.number).then((data) => {\n            data.transactions.forEach(t => {\n              if(transactions[t]) {\n                transactions[t].onBlock = true\n                transactions[t].element.attr(\"class\", \"blockNode\")\n\n                const randomX = RandomRange(-90, -60)\n                const randomY = RandomRange(0, 20)\n\n                // animate onto block\n                transactions[t].element.transition()\n                                       // .attr(\"cx\", (width / 2) + randomX)\n                                       .attr(\"cx\", (width / 2) + 5)\n                                       // .attr(\"cy\", 0 + randomY)\n                                       .attr(\"cy\", -5)\n                                       .attr(\"r\", 3)\n                                       .duration(2000)\n                                       .on(\"end\", () => {\n                                         // stick the animated transaction into the block group\n                                         if(!transactions[t]) {\n                                           return\n                                         }\n\n                                         transactions[t].element.attr('cx', randomX).attr('cy', randomY)\n\n                                         transactions[t].element.remove();\n                                         // const removed = transactions[t].element.remove();\n                                         // const fblock = blocks.filter((bl) => bl.block.number === b.number)\n                                         // if(fblock[0]) {\n                                         //   fblock[0].element.append(() => {\n                                         //     return removed.node();\n                                         //   });\n                                         // }\n                                       })\n              }\n            })\n\n            setTimeout(() => {\n              if(currentBlock && currentBlock.g) {\n                currentBlock.g.remove()\n              }\n\n              newB.startTransition(d3, translateAlong, points)\n\n              this_var.refs.blockstatus.style.color = \"rgba(255, 255, 255, 0)\"\n\n              setTimeout(() => {\n                this_var.setState({\n                  blockStatus: 'LIFT OFF!'\n                })\n                this_var.refs.blockstatus.style.width = \"52px\"\n                this_var.refs.blockstatus.style.color = \"rgba(255, 255, 255, 255)\"\n              }, 550)\n\n\n              setTimeout(createStartBlock, 2250)\n            }, 2250)\n          })\n\n          if(blocks.length > maxBlocksOnScreen) {\n              blocks.shift().element.remove()\n          }\n\n        }\n\n        // Define the div for the tooltip\n        const div = d3.select(\"body\").append(\"div\")\n                      .attr(\"class\", \"tooltip\")\n                      .style(\"opacity\", 0);\n\n        function spawnTransaction(t) {\n          if(!t || !t.value || !svg) return\n\n          const x = RandomRange(0, width)\n          const y = RandomRange(0, height)\n          const value = parseInt(t.value) / 1000000000000000000\n          const r = Math.max(3, Math.min(value, 50))\n          const rgba = [RandomRange(0, 255), RandomRange(0, 255), RandomRange(0, 255), Math.max(RandomRange(0, 1), 0.3)]\n\n          const newT = new Transaction(d3, svg, div, width, height, x, y, r, value, rgba)\n\n          transactions[t.hash] = {\n            transaction: t,\n            element: newT.element,\n            x,\n            y,\n            r,\n            rgba,\n            id: t.hash\n          }\n\n          tpsCounter++;\n\n          if(Date.now() - lastTpsCheck > 1000) {\n            this_var.setState({tps: tpsCounter});\n            lastTpsCheck = Date.now()\n            tpsCounter = 0\n          }\n\n          const tkeys = Object.keys(transactions)\n          if(tkeys.length > app.config.maxTransactionsOnScreen) {\n            let x = 0\n            while((x < tkeys.length - 1) && (transactions[tkeys[x]].onBlock)) {\n              x++\n            }\n\n            transactions[tkeys[x]].element.remove()\n            delete transactions[tkeys[x]]\n\n          }\n        }\n\n\n\n    }\n\n    render() {\n        return <div className=\"all-content\">\n            <div className=\"banner\">\n              <div className=\"logo-container\">\n                <div className=\"logo\"></div>\n              </div>\n              <div className=\"details\">\n                <div className=\"stats\">\n                  <div className=\"group\">\n                    <div className=\"label\">Block Time</div>\n                    <div className=\"data\">{this.state.blockSpeed}</div>\n                  </div>\n                  <div className=\"group\">\n                    <div className=\"label\">TPS</div>\n                    <div className=\"data\">{this.state.tps}</div>\n                  </div>\n                  <div className=\"group\">\n                    <div className=\"label\">Current Block</div>\n                    <div className=\"data\">{this.state.currentBlock}</div>\n                  </div>\n                </div>\n                <div className=\"settings\">\n                  <div className=\"group\">\n                    <div className=\"label\">Animation Speed</div>\n                    <div>\n                      <input\n                        type=\"range\"\n                        min={0}\n                        max={100}\n                        onChange={this.onAnimationSpeedChange}\n                        value={this.state.animationSpeed}\n                      />\n                      <input\n                        type=\"number\"\n                        className=\"number-input\"\n                        min={1}\n                        max={100}\n                        onChange={this.onAnimationSpeedChange}\n                        value={this.state.animationSpeed}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"group\">\n                    <div className=\"label\">Transactions Visible</div>\n                    <div>\n                      <input\n                        type=\"range\"\n                        min={this.state.minimumTransactionsVisible}\n                        max={this.state.maximumTransactionsVisible}\n                        onChange={this.onTransactionsVisibleChange}\n                        value={this.state.transactionsVisible}\n                      />\n                      <input\n                        type=\"number\"\n                        className=\"number-input\"\n                        min={this.state.minimumTransactionsVisible}\n                        max={this.state.maximumTransactionsVisible}\n                        onChange={this.onTransactionsVisibleChange}\n                        value={this.state.transactionsVisible}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* <div className=\"legend\">\n                  <div className=\"group\">\n                    <div className=\"label\">Contract Transaction</div>\n                    <div className=\"icon\"></div>\n                  </div>\n                </div> */}\n              </div>\n            </div>\n            <div className=\"main-content\">\n              <div className=\"background\">\n                <div className=\"stars\" />\n              </div>\n              <svg className=\"shipsvg\" ref=\"shipsvg\" />\n              <div className=\"transaction-container\">\n                <div className=\"block-status\" ref=\"blockstatus\">\n                  {this.state.blockStatus}\n                </div>\n                <svg className=\"svg\" ref=\"svg\" width=\"100%\" height=\"100%\"></svg>\n              </div>\n              <canvas className=\"canvas\" ref=\"canvas\"></canvas>\n              <img src=\"/images/cat.png\" alt=\"cat\" ref=\"cat\" width=\"10px\" style={{display: 'none'}} />\n              <video autoPlay loop ref=\"video\" style={{display: 'none'}}>\n                <source src=\"https://i.imgur.com/no3t9ib.webm\" type=\"video/webm\" />\n              </video>\n\n              <footer className=\"footer\">\n                Skrumble Network © 2018\n              </footer>\n            </div>\n        </div>\n    }\n}\n\nexport default Layout;\n","class Block {\n  constructor(svg, points, offset, animationSpeed) {\n    this.offset = offset\n\n    this.group = svg.append('g').attr('transform', `translate(${points[0][0] - this.offset}, ${points[0][1]})rotate(270)`).attr('opacity', 1)\n\n    this.label = this.group.append(\"text\")\n       .attr('transform', \"translate(20, -5)\")\n       .text(\"\")\n\n    this.img = this.group.append(\"svg:image\")\n                   .attr('xlink:href', '/images/Rocket Ship.svg')\n                   .attr(\"width\", 50)\n\n    this.animationSpeed = 5000\n\n    if(animationSpeed) {\n      this.animationSpeed = this.animationSpeed * ((100 - animationSpeed) / 100)\n    }\n  }\n\n  get g() {\n    return this.group\n  }\n\n  get l() {\n    return this.label\n  }\n\n  startTransition(d3, translateAlong, points, keep=false, speed=null, ease) {\n    this.group.transition()\n        .ease(ease || d3.easeBackIn)\n        // .attrTween(\"transform\", translateAlong(path.node()))\n        .attr(\"transform\", `translate(${points[1][0] - this.offset}, ${points[1][1]}) rotate(270)`)\n        .duration(speed || this.animationSpeed)\n        .on('end', () => {\n          if(keep) return\n\n          this.group.transition()\n                .attr('opacity', 0)\n                .duration(1500)\n          setTimeout(() => {\n            this.group.remove()\n          }, 2000)\n        })\n  }\n\n}\n\n\nexport default Block\n","class Transaction {\n  constructor(d3, svg, div, width, height, x, y, r, value, rgba) {\n\n    this.transacton = svg.append('circle')\n                      .attr('class', 'transactionNode')\n                      .attr('r', 0)\n                      .attr('cx', x)\n                      .attr('cy', y)\n                      .attr('fill', `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${rgba[3]})`)\n                      .attr('opacity', 1)\n                      .on(\"mouseover\", function(d) {\n                          d3.select(this).transition()\n                                         .duration(200)\n                                         .attr('r', Math.max(r * 1.5, 6))\n                                         .attr('fill', `rgba(${Math.min(rgba[0] + 10, 255)}, ${Math.min(rgba[1] + 10, 255)}, ${Math.min(rgba[2] + 10, 255)}, ${Math.min(rgba[3] + .3, 1)})`)\n\n                          div.transition()\n                              .duration(200)\n                              .style(\"opacity\", .9);\n                          div.html(value + \" ETH\")\n                              .style(\"left\", (d3.event.pageX) + \"px\")\n                              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n                          })\n                      .on(\"mouseout\", function(d) {\n                          d3.select(this).transition()\n                                         .duration(200)\n                                         .attr('r', r)\n                                         .attr('fill', `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${rgba[3]})`)\n                          div.transition()\n                              .duration(500)\n                              .style(\"opacity\", 0);\n                      });\n\n      this.transacton.transition()\n                      .duration(750)\n                      .attr('r', r)\n                      .attr('opacity', 1)\n  }\n\n  get element() {\n    return this.transacton\n  }\n}\n\nexport default Transaction\n","import * as d3 from 'd3';\nimport Web3 from 'web3'\nimport config from '../config.json'\n\nclass App {\n  constructor(width, height, svgref, canvasref, shipsvgref) {\n    this.d3 = d3\n    // Point to your ipfs and web3 api endpoints here\n    this.web3 = new Web3(config.web3API)\n\n    this.width = width\n    this.height = height\n\n    this.data = {\n      nodes: [\n\n      ],\n      links: [\n\n      ]\n    }\n\n    /* CONFIG */\n    this.config = {\n      margin: { top: 0, right: 0, bottom: 0, left: 0 },\n      nodeRadius: 15,\n      maxTransactionsOnScreen: 500,\n      maxBlocksOnScreen: 20,\n      points: [\n        [width / 2, height - 85],\n        [width / 2, 0],\n      ],\n      startPoints: [\n        [width / 2, height + 100],\n        [width / 2, height - 85]\n      ],\n      blockOffset: 20\n    }\n\n    this.transactions = {\n\n    }\n    this.blocks = []\n    this.tpsCounter = 0\n    this.lastTpsCheck = Date.now();\n\n    this.svg = d3.select(svgref)\n                 .attr('width', width + this.config.margin.left + this.config.margin.right)\n                 .attr('height', height + this.config.margin.top + this.config.margin.bottom)\n                 .append('g')\n                 .attr('transform', `translate(${this.config.margin.left},${this.config.margin.top})`);\n\n    this.shipsvg = d3.select(shipsvgref)\n                     .attr('width', shipsvgref.clientWidth)\n                     .attr('height', shipsvgref.clientHeight)\n                     .append('g');\n\n    this.path = this.svg.append(\"path\")\n      .data([this.config.points])\n      .attr(\"d\", d3.line().curve(d3.curveBundle.beta(1)))\n      .attr('class', 'invisible')\n\n    this.shipStartPath = this.shipsvg.append(\"path\")\n      .data([this.config.startPoints])\n      .attr(\"d\", d3.line().curve(d3.curveBundle.beta(1)))\n      .attr('class', 'invisible')\n  }\n\n  get adjustedWidth() {\n    return this.width - this.config.margin.left - this.config.margin.right\n  }\n\n  get adjustedHeight() {\n    return this.height - this.config.margin.top - this.config.margin.bottom\n  }\n\n  setMaxTransactions(max) {\n    this.config.maxTransactionsOnScreen = max\n  }\n}\n\nexport default App\n","export function RandomRange(min, max) {\n  return Math.random() * (max - min) + min\n}\n\nexport function translateAlong(path) {\n  var direction = 1,\n      atLength;\n  var l = path.getTotalLength() * 2;\n  return function(d, i, a) {\n    return function(t) {\n      atLength = direction === 1 ? (t * l) : (l - (t * l));\n      var p1 = path.getPointAtLength(atLength),\n          p2 = path.getPointAtLength((atLength)+direction),\n          angle = Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n\n          if(p2.y - p1.y === 0 && p2.x - p1.x === 0) {\n            angle = 270\n          }\n\n      return \"translate(\" + ( p1.x - 10 )+ \",\" + ( p1.y ) + \")rotate(\" + angle + \")\";\n    }\n  }\n}\n\nexport function Drag(d3, simulation) {\n  const boundingBox = BoundingBox.bind(this)\n\n  function dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  function dragged(d) {\n    d.fx = boundingBox(d3.event.x, false, true);\n    d.fy = boundingBox(d3.event.y, true, true);\n  }\n\n  function dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  }\n\n  return d3.drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n}\n\nexport function BoundingBox(num, useHeight=false) {\n   const min = (useHeight ? this.height : this.width) - this.config.nodeRadius\n   const max = Math.min(min, num)\n   const minmax = Math.max(this.config.nodeRadius, max)\n\n   return minmax\n}\n","import React, { Component } from 'react';\nimport Layout from './components/Layout'\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}